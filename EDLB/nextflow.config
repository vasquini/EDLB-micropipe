// Singularity containter cache. Change this as appropriate
singularity {
  enabled = true
  singularity.cacheDir = '/scicomp/home-pure/suj7/.singularity/cache'
}

// profile for running the pipeline on Zeus at the Pawsey Supercomputing Centre
profiles {
  zeus {
	workDir = "$MYSCRATCH/nxf_work"
	process {
    		cache = 'lenient'
    		stageInMode = 'symlink'
  	}
	singularity {
    		enabled = true
		// the line below does not work with multi-cluster
    		// envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
    		//MV ADDED:
		cacheDir = SINGULARITY_CACHE 
                //MV: commented out 
                //cacheDir = "$NXF_HOME/singularity"
		//MV: COMM\ENTED OUT
		//runOptions = "-B /group,/scratch --nv"
  	}
 	process.module = 'singularity'
  	process {
    		executor = 'slurm'
    		clusterOptions = "--account=${params.slurm_account}"
   	 	queue = 'workq'
    		time = '2h'
   	 	memory = '16GB'
    		withName: 'basecalling|basecalling_single_isolate|basecalling_demultiplexing_guppy' {
      			time = '24h'
    		}
		withLabel: big_mem { 
			memory = '32GB'
			time = '4h'
           	}
		withName: 'basecalling_cpu|basecalling_cpu_single_isolate|basecalling_demultiplexing_guppy_cpu' { 
			time = '72h'
			queue = 'longq'
		}
		withLabel: gpu {
			executor = 'slurm_topaz'
			clusterOptions += " --gpus-per-node=1"
			queue = 'gpuq'
		}
	}
  }
}

// Default parameters. Commandline parameters will take priority over these
params {
	executor = "local"
	outdir = './results'
        multiple_coverages=false
        basecalling = true
        demultiplexing = false
        single_sample=false
        fast5_dir="/scicomp/home-pure/suj7/EDLB/test_data/demultiplexed_fast5"
        gpu = true
        fast5 = false
        fastq = false
	datadir = false
        fastqc_threads=4
        demultiplexer = 'guppy'
	//Path to the Guppy GPU and CPU binary folder (v3.6.1). Change this as appropriate when providing Guppy as a binary folder and do not forget the "/" at the end of the path
	//MV: added path to guppy gpu module. Add your path below:
        guppy_gpu_folder = "/apps/x86_64/guppy/6.3.8-gpu/bin/"
        guppy_cpu_folder = "/apps/x86_64/guppy/6.3.8-cpu/bin/" 
	//Uncomment the two following lines when providing Guppy container images (and comment the two previous lines)
	//guppy_gpu_folder = ""
	//guppy_cpu_folder = ""
	guppy_config_gpu = false //"dna_r9.4.1_450bps_sup.cfg"
	//MV: Switch to SUP mode. guppy_config_gpu = "dna_r9.4.1_450bps_hac.cfg"
        guppy_config_cpu = false//"dna_r9.4.1_450bps_fast.cfg"
        kit = "SQK-LSK109"//false
        flowcell = "FLO-MIN106"//false
        guppy_gpu_device = "auto"
        guppy_num_callers = 8
        guppy_cpu_threads_per_caller = 1
        //MV added line below for newer versions
        guppy_basecaller_args = "--recursive -q 0 --disable_qscore_filtering --gpu_runners_per_device 2"
	//"--recursive --trim_barcodes -q 0 --disable_qscore_filtering"
	//add the --disable_qscore_filtering if using Guppy v4.5.2 to avoid creating pass/fail folders and breaking the pipeline   
        //MV: uncomented this wrong kit and substituted with correct kit
        guppy_barcode_kits= "SQK-RBK004"
        guppy_barcoder_threads = 2
        qcat_args = ""
        skip_pycoqc = true
        skip_qc = true
        skip_rasusa = true
        skip_porechop = false
        skip_filtering = false
        rasusa_coverage = 100
        filtering = "japsa"
        porechop_args = ""
        porechop_threads = 4
        japsa_args = "--lenMin 1000 --qualMin 4"
        filtlong_args = "--min_length 1000 --keep_percent 90"
        flye_args = ""
        flye_threads = 4
        polisher = "medaka"
        racon_nb = 4
        racon_args = "-m 8 -x -6 -g -8 -w 500"
        racon_threads = 4
	medaka_model = "r941_min_sup_g507"
        medaka_threads = 8
        nextpolish_threads = 4
	nextpolish_task_SR = "1212"
	nextpolish_task_LR = "55"
	skip_illumina = false
        fixstart_args = ""
        skip_fixstart = false
        quast_threads = 1
        quast_args = ""
        skip_quast = false
}

// Process settings. Set job scheduler if appropriate (SLURM, PBS e.g.)
// If your job scheduler has different queues/partitions for cpu and gpu, please also set them here
process {
	executor = params.executor
        withLabel: cpu { queue = 'main' }
        withLabel: gpu { queue = 'gpu' }
}
        
// Debug and report options
trace {
  enabled = true
  overwrite = true
  file = "${params.outdir}/trace.txt"
}
timeline {
  enabled = true
  overwrite=true
  file = "${params.outdir}/timeline.html"
}
report {
  enabled = true
  overwrite=true
  file = "${params.outdir}/report.html"
}
dag {
  enabled = true
  overwrite=true
  file = "${params.outdir}/flowchart_dag.svg"
}



// Not generally user-modifiable !!!
process {
	withLabel: big_mem { memory = 32.GB }
	//Path to the Guppy GPU and CPU container images (v3.6.1). Uncomment and change this as appropriate if providing Guppy as a container image. 
	//withLabel: guppy_gpu { container = '' }
	//withLabel: guppy_cpu { container = '' }
	withLabel: pycoqc { container = 'docker://quay.io/biocontainers/pycoqc:2.5.0.23--py_0' }
        withName: demultiplexing_qcat { container = 'docker://quay.io/biocontainers/qcat:1.0.1--py_0' }
        withName: FASTQC { container = 'docker://quay.io/biocontainers/fastqc:0.11.9--hdfd78af_1' }
        withName: MULTIQC { container = 'docker://quay.io/biocontainers/multiqc:1.12--pyhdfd78af_0' }
	withName: rasusa { container = 'docker://quay.io/biocontainers/rasusa:0.3.0--h516909a_0' }
	withName: porechop { container = 'docker://quay.io/biocontainers/porechop:0.2.3_seqan2.1.1--0' }
   	withName: filtlong { container = 'docker://quay.io/biocontainers/filtlong:0.2.0--he513fc3_3' }
   	withName: japsa { container = 'docker://vmurigneux/japsa:latest' }
        withName: flye { container = 'docker://staphb/flye:2.9' }
	withName: racon_cpu { container = 'docker://vmurigneux/racon:1.4.9' }
        //withLabel: medaka { container = 'docker://quay.io/biocontainers/medaka:1.6.0--py38h84d2cc8_0'}
	withLabel: medaka { container = 'docker://quay.io/biocontainers/medaka:1.7.2--py38h6239ad4_1'}
        withLabel: nextpolish { container = 'docker://pvstodghill/nextpolish:1.1.0__2020-05-12' }
	withLabel: circlator { container = 'docker://quay.io/biocontainers/circlator:1.5.5--py_3' }
	withName: quast { container = 'docker://quay.io/biocontainers/quast:5.0.2--py37pl526hb5aa323_2' }
	//errorStrategy = 'ignore'
}

mounts {
    fast5 = ""
    fastq = ""
    datadir = ""
    if (params.fast5 != false) {
        fast5 = "-B \"`[[ \"${params.fast5}\" =~ ^/ ]] && echo ${params.fast5} || echo ${PWD}/${params.fast5}`\""
    }
    if (params.fastq != false){
        fastq = "-B \"`[[ \"${params.fastq}\" =~ ^/ ]] && echo ${params.fastq} || echo ${PWD}/${params.fastq}`\""
    }
    if (params.datadir != false){
        datadir = "-B \"`[[ \"${params.datadir}\" =~ ^/ ]] && echo ${params.datadir} || echo ${PWD}/${params.datadir}`\""
    }   
}

singularity {
    enabled = true
    autoMounts = true
    //MV: COMMENTED OUT autoMounts = false
    runOptions = "-B \"$launchDir\" $mounts.fast5 $mounts.fastq $mounts.datadir -B \"`[[ \"${params.outdir}\" =~ ^/ ]] && echo ${params.outdir} || echo ${PWD}/${params.outdir}`\""
}

manifest {
  name = 'microPIPE'
  author = 'Valentine Murigneux'
  description = 'Bacterial genome assembly pipeline'
  homePage = 'https://github.com/BeatsonLab-MicrobialGenomics/micropipe'
  mainScript = 'main.nf'
  version = '0.9'
}

