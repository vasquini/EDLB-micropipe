// ATTENTION: Singularity container cache. Change this as appropriate
singularity {
  enabled = true
  singularity.cacheDir = '/scicomp/home-pure/suj7/.singularity/cache'
}

// profile for running the pipeline on Zeus at the Pawsey Supercomputing Centre
//profiles {
//  zeus {
//	workDir = "$MYSCRATCH/nxf_work"
//	process {
//    		cache = 'lenient'
//    		stageInMode = 'symlink'
//  	}
//	singularity {
//              autoMounts = true
//    		enabled = true
//		// the line below does not work with multi-cluster
//   		// envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
//    		cacheDir = "${SINGULARITY_CACHEDIR}"
//                //MV ADDED:
//		//cacheDir = SINGULARITY_CACHE 
//		//MV: COMMENTED OUT
//		//runOptions = "-B /group,/scratch --nv"
//  	}
// 	process.module = 'singularity'
//  	process {
//    		executor = 'slurm'
//    		clusterOptions = "--account=${params.slurm_account}"
//  	 	queue = 'workq'
//    		time = '2h'
//   	 	memory = '16GB'
//    		withName: 'basecalling|basecalling_single_isolate|basecalling_demultiplexing_guppy' {
//      			time = '24h'
//    		}
//		withLabel: big_mem { 
//			memory = '32GB'
//			time = '4h'
//           	}
//		withName: 'basecalling_cpu|basecalling_cpu_single_isolate|basecalling_demultiplexing_guppy_cpu' { 
//			time = '72h'
//			queue = 'longq'
//		}
//		withLabel: gpu {
//			executor = 'slurm_topaz'
//			clusterOptions += " --gpus-per-node=1"
//			queue = 'gpuq'
//		}
//	}
//  }
//}

profiles {
	singularity {
                autoMounts = true
    		enabled = true
                //MV: COMMENTED OUT
    		//cacheDir = "${SINGULARITY_CACHEDIR}"
		//MV: COMMENTED OUT
		//runOptions = "-B /group,/scratch --nv"
		runOptions = '--cleanenv'
		runOptions = '--no-home'
		runOptions = "-B $PWD:/data"
		cacheDir = "/scicomp/scratch/suj7/singularity.cache"
  	}
 	process.module = 'singularity'

	//sge for CDC cluster
	 sge {
	   process {
			executor = 'sge'
			penv = 'smp'
			queue = 'all.q'
			cpus = 1
			clusterOptions = { "-l GPU=1 -l gpucc=7" }
	   }
	   executor {
		 queueSize = 100
		 pollInterval = '15 sec'
	   }
	   singularity {
			enabled = true
			autoMounts = true
			runOptions = '--cleanenv'
			runOptions = '--no-home'
			runOptions = "-B $PWD:/data"
			runOptions = '--nv'
			cacheDir = "/scicomp/scratch/suj7/singularity.cache" 
	   }
	 }
	 //SHORT - add to profile if you want cluster short queue
	 short {
	   process {
		 queue = 'short.q'
	   }
	 }
	//GPU - add to profile if you want gpu queue
	 gpu {
	   process {
		 queue = 'gpu.q'
		 clusterOptions = { "-l gpu=1" } //MV: Addition by me
	   }
	 }
	//HIGHMEMORY - add to profile if you want highmem queue
	 highmem {
	   process {
		 queue = 'highmem.q'
	   }
	 }
}

// Default parameters. Commandline parameters will take priority over these
params {
	executor = "local"
	outdir = './results'
        multiple_coverages=false
        basecalling = false//true
        demultiplexing = false
        single_sample=false
        //ATTENTION: Make sure to change pod5_dir to the location of POD5 directories!!!
        pod5_dir="/scicomp/groups/OID/NCEZID/DFWED/EDLB/projects/the-chunnel/mariana_pod5s/pod5_pass/"
        dorado_gpu_folder = "/apps/x86_64/dorado/0.5.1/bin"
        dorado_model = 'dna_r10.4.1_e8.2_400bps_sup@v4.2.0'
	dorado_basecaller = 'dna_r10.4.1_e8.2_400bps_sup@v4.2.0'
	dorado_modified_bases = '5mC 6mA'
	dorado_device = 'cuda:0'
        dorado_bactchsize=32
        //ATTENTION: Make sure to change fast5_dir to the location of fast5_directories!!!
        fast5_dir=false 
        gpu = true
        fast5 = false
        fastq = false
	datadir = false
        fastqc_threads=4
        demultiplexer = 'guppy'
	//Path to the Guppy GPU and CPU binary folder (v3.6.1). Change this as appropriate when providing Guppy as a binary folder and do not forget the "/" at the end of the path
	//ATTENTION: Specify path to guppy gpu module. Add your path below:
        guppy_gpu_folder = "/apps/x86_64/guppy/6.4.6-gpu/bin/"
        //guppy_cpu_folder = "/apps/x86_64/guppy/6.4.6-cpu/bin/" 
	//Uncomment the two following lines when providing Guppy container images (and comment the two previous lines)
	//guppy_gpu_folder = ""
	//guppy_cpu_folder = ""
        //ATTENTION: The following is the new model for R10.4.1
	guppy_config_gpu = "dna_r10.4.1_e8.2_400bps_hac.cfg" // Old model for R9.4.1: "dna_r9.4.1_450bps_sup.cfg"
        guppy_config_cpu = false
        kit = false
        flowcell = false
        guppy_gpu_device = "auto"
        guppy_num_callers = 8
        guppy_cpu_threads_per_caller = 1
        guppy_basecaller_args = "--recursive -q 0 --disable_qscore_filtering --gpu_runners_per_device 2"
        guppy_barcode_kits= "SQK-RBK004"
        guppy_barcoder_threads = 2
        qcat_args = ""
        skip_pycoqc = false
        skip_qc = false
        skip_rasusa = true
        skip_porechop = false
        skip_filtering = false
        rasusa_coverage = 100
        filtering = "japsa" 
        porechop_args = ""
        porechop_threads = 4
        japsa_args = "--lenMin 1000 --qualMin 4"
        filtlong_args = "--min_length 1000 --keep_percent 90"
        flye_args = ""
        flye_threads = 4
        polisher = "medaka"
        skip_racon = false
        racon_nb = 4
        racon_args = "-m 8 -x -6 -g -8 -w 500"
        racon_threads = 4
	medaka_model = "r941_min_sup_g507"
        medaka_threads = 8
        nextpolish_threads = 4
	nextpolish_task_SR = "1212"
	nextpolish_task_LR = "55"
	skip_illumina = false
        fixstart_args = ""
        skip_fixstart = false
        quast_threads = 1
        quast_args = ""
        skip_quast = false
}

// Process settings. Set job scheduler if appropriate (SLURM, PBS e.g.)
// If your job scheduler has different queues/partitions for cpu and gpu, please also set them here
process {
	executor = params.executor
        withLabel: cpu { queue = 'main' }
        withLabel: gpu { queue = 'gpu' }
}
        
// Debug and report options
trace {
  enabled = true
  overwrite = true
  file = "${params.outdir}/trace.txt"
}
timeline {
  enabled = true
  overwrite=true
  file = "${params.outdir}/timeline.html"
}
report {
  enabled = true
  overwrite=true
  file = "${params.outdir}/report.html"
}
dag {
  enabled = true
  overwrite=true
  file = "${params.outdir}/flowchart_dag.svg"
}



// Not generally user-modifiable !!!
process {
	withLabel: big_mem { memory = 32.GB }
	//Path to the Guppy GPU and CPU container images (v3.6.1). Uncomment and change this as appropriate if providing Guppy as a container image. 
	//withLabel: guppy_gpu { container = '' }
	//withLabel: guppy_cpu { container = '' }
        //withName: BASECALL_DORADO = {'docker://nanoporetech/dorado:sha1433bfc3146fd0dc94ad9648452364f2327cf1b0'}
        //withName: BASECALL_DORADO = {'docker://nanoporetech/dorado:latest'}
        withName: BASECALL_DORADO {
                beforeScript = 'source /etc/profile'
                module = ['dorado/0.5.1']
                shell = ['/bin/bash']
        }
        withName:READSGET: container = {'docker://staphb/samtools:1.17'}
	withLabel: pycoqc { container = 'docker://quay.io/biocontainers/pycoqc:2.5.0.23--py_0' }
        withName: demultiplexing_qcat { container = 'docker://quay.io/biocontainers/qcat:1.0.1--py_0' }
        withName: FASTQC { container = 'docker://quay.io/biocontainers/fastqc:0.11.9--hdfd78af_1' }
        withName: MULTIQC { container = 'docker://quay.io/biocontainers/multiqc:1.12--pyhdfd78af_0' }
	withName: rasusa { container = 'docker://quay.io/biocontainers/rasusa:0.3.0--h516909a_0' }
	withName: porechop { container = 'docker://quay.io/biocontainers/porechop:0.2.3_seqan2.1.1--0' }
   	withName: filtlong { container = 'docker://quay.io/biocontainers/filtlong:0.2.0--he513fc3_3' }
   	withName: japsa { container = 'docker://vmurigneux/japsa:latest' } 
	//withName: flye { container = 'docker://staphb/flye:2.9' }
        //UNCOMMENT AFTER SKIP RACON RUNS: 
	withName: flye { container = 'docker://staphb/flye:latest' } 
	withName: racon_cpu { container = 'docker://vmurigneux/racon:1.4.9' }
	withLabel: medaka { container = 'docker://quay.io/biocontainers/medaka:1.7.2--py38h6239ad4_1'}
        withLabel: nextpolish { container = 'docker://pvstodghill/nextpolish:1.1.0__2020-05-12' }
	withLabel: circlator { container = 'docker://quay.io/biocontainers/circlator:1.5.5--py_3' }
	withName: quast { container = 'docker://quay.io/biocontainers/quast:5.0.2--py37pl526hb5aa323_2' }
	//errorStrategy = 'ignore'
}

mounts {
    fast5 = ""
    fastq = ""
    datadir = ""
    if (params.fast5 != false) {
        fast5 = "-B \"`[[ \"${params.fast5}\" =~ ^/ ]] && echo ${params.fast5} || echo ${PWD}/${params.fast5}`\""
    }
    if (params.fastq != false){
        fastq = "-B \"`[[ \"${params.fastq}\" =~ ^/ ]] && echo ${params.fastq} || echo ${PWD}/${params.fastq}`\""
    }
    if (params.datadir != false){
        datadir = "-B \"`[[ \"${params.datadir}\" =~ ^/ ]] && echo ${params.datadir} || echo ${PWD}/${params.datadir}`\""
    }   
}

singularity {
    enabled = true
    autoMounts = true
    //MV: COMMENTED OUT autoMounts = false
    runOptions = "-B \"$launchDir\" $mounts.fast5 $mounts.fastq $mounts.datadir -B \"`[[ \"${params.outdir}\" =~ ^/ ]] && echo ${params.outdir} || echo ${PWD}/${params.outdir}`\""
}

manifest {
  name = 'microPIPE'
  author = 'Valentine Murigneux'
  description = 'Bacterial genome assembly pipeline'
  homePage = 'https://github.com/BeatsonLab-MicrobialGenomics/micropipe'
  mainScript = 'main.nf'
  version = '0.9'
}

